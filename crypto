challenge name: time leaking
source: 
from flask import Flask, request, abort
import time
import hashlib
from secret import KEY

key = KEY
# flag.txt


def insecure_compare(s1, s2):
    for i, j in zip(s1, s2):
        if i != j:
            return 0
        time.sleep(0.5)
    return 1


app = Flask(__name__)


@app.route('/check', methods=['POST'])
def check():
    file = request.form['file']
    signature = request.form['signature']
    signature_for_file = hashlib.md5(key + file).hexdigest()
    
    if len(signature_for_file) == len(signature) and insecure_compare(signature_for_file, signature):
        content = open(file, 'r').read()

        if content:
            return content, 200
        else:
            return "No file", 404
            
    return "Wrong signature", 500


if __name__ == '__main__':
    app.run(host='0.0.0.0', port=10005)
